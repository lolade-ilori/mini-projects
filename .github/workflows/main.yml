name: CI-CD React Lessons

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

# Creating a trigger which tells githubActions when to run our workflow
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# list of jobs to include in our workflow, and we defin the OS we want our job to run on
jobs:
  build_test:
    runs-on: ubuntu-latest
    container:
      image: node:22
    steps:
      - uses: actions/checkout@v4

      - run: npm ci
      #   - run: npm test
      - run: npm run build

  push_to_Docker:
    needs: [build_test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Login to DockerHub Registry
        run: echo ${{secrets.DOCKERHUB_PASSWORD}} | docker login -u ${{secrets.DOCKERHUB_USERNAME}} --password-stdin

      - name: Build and push
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/react-projects:latest .
          docker push ${{secrets.DOCKERHUB_USERNAME}}/react-projects:latest

      - name: Run the image in a container
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/react-projects:latest
          run: |
            echo "running docker image"

  push_to_vercel:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # To deploy to vercel we use vercel cli, so we install vercel
      - name: Install Vercel CLI
        run: npm install --global vercel

      # Before we use vercel to build a project, we must run vercel pull
      # This saves environment variables and project settings from the vercel cloud to a local cache in the sub folder
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
